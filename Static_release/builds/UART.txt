//Begin_Include
#include "MDR32FxQI_port.h"
#include "MDR32FxQI_uart.h"
//End_Include

//Begin_prototype_Func
void Ini_Uart___NUM__();
//End_prototype_Func

//Begin_Init_struct
UART_InitTypeDef sUART;
//End_Init_struct

//Begin_RST_CLK
	RST_CLK_PCLKcmd(RST_CLK_PCLK_UART__NUM__, ENABLE);
	RST_CLK_PCLKcmd(RST_CLK_PCLK_PORT__PORTTX__, ENABLE);
	RST_CLK_PCLKcmd(RST_CLK_PCLK_PORT__PORTRX__, ENABLE);
//End_RST_CLK

//Begin_Call_Func
	Ini_Uart___NUM__();
//End_Call_Func

//Begin_Result
		//uint16_t dataUart = 0;		

		//if(UART_GetFlagStatus (MDR_UART__NUM__, UART_FLAG_TXFE) == SET){
		//	UART_SendData(MDR_UART__NUM__, 0xAA);
		//}
		
		//if(UART_GetFlagStatus (MDR_UART__NUM__, UART_FLAG_RXFE) != SET){
		//	dataUart = UART_ReceiveData(MDR_UART__NUM__);
		//}
		
//End_Result

//Begin_Func
void Ini_Uart___NUM__(){
	static PORT_InitTypeDef PortInit;

	PortInit.PORT_Pin        = PORT_Pin___PINTX__; // TX 
	PortInit.PORT_OE         = PORT_OE_OUT;
	PortInit.PORT_PULL_UP    = PORT_PULL_UP_OFF;
	PortInit.PORT_PULL_DOWN  = PORT_PULL_DOWN_OFF;
	PortInit.PORT_PD_SHM     = PORT_PD_SHM_OFF;
	PortInit.PORT_PD         = PORT_PD_DRIVER;
	PortInit.PORT_GFEN       = PORT_GFEN_OFF;
	PortInit.PORT_FUNC       = PORT_FUNC___FUNCTX__;
	PortInit.PORT_SPEED      = PORT_SPEED_MAXFAST;
	PortInit.PORT_MODE       = PORT_MODE_DIGITAL;
	PORT_Init(MDR_PORT__PORTTX__, &PortInit);

	PortInit.PORT_Pin        = PORT_Pin___PINRX__; //RX
	PortInit.PORT_OE         = PORT_OE_IN;
	PortInit.PORT_FUNC       = PORT_FUNC___FUNCRX__;
	PORT_Init(MDR_PORT__PORTRX__, &PortInit);
		
	UART_BRGInit(MDR_UART__NUM__, UART_HCLKdiv1);
	
	sUART.UART_BaudRate = __BAUDRATE__; 
	sUART.UART_WordLength = UART_WordLength8b;
	sUART.UART_StopBits = UART_StopBits1;
	sUART.UART_Parity = UART_Parity_No;
	sUART.UART_FIFOMode = UART_FIFO_OFF;
	sUART.UART_HardwareFlowControl = UART_HardwareFlowControl_TXE | UART_HardwareFlowControl_RXE;

	UART_Init(MDR_UART__NUM__, &sUART);
	UART_Cmd(MDR_UART__NUM__,ENABLE);
}

//End_Func